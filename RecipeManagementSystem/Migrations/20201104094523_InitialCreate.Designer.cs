// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RecipeManagementSystem.Data;

namespace RecipeManagementSystem.Migrations
{
    [DbContext(typeof(RecipeManagementSystemDbContext))]
    [Migration("20201104094523_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9");

            modelBuilder.Entity("RecipeManagementSystem.Models.Db.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("rms_ingredient");
                });

            modelBuilder.Entity("RecipeManagementSystem.Models.Db.IngredientCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("rms_ingredient_category");
                });

            modelBuilder.Entity("RecipeManagementSystem.Models.Db.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FinalConsiderations")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Introduction")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("rms_recipe");
                });

            modelBuilder.Entity("RecipeManagementSystem.Models.Db.RecipeStep", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("OrderIdx")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RecipeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.ToTable("rms_recipe_step");
                });

            modelBuilder.Entity("RecipeManagementSystem.Models.Db.RecipeTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("ParentTagId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ParentTagId");

                    b.ToTable("rms_recipe_tag");
                });

            modelBuilder.Entity("RecipeManagementSystem.Models.Db.RecipeTagMap", b =>
                {
                    b.Property<int>("RecipeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RecipeTagId")
                        .HasColumnType("INTEGER");

                    b.HasKey("RecipeId", "RecipeTagId");

                    b.HasIndex("RecipeTagId");

                    b.ToTable("rms_recipe_tag_map");
                });

            modelBuilder.Entity("RecipeManagementSystem.Models.Db.UseOfIngredient", b =>
                {
                    b.Property<int>("IngredientId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ReceiptId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Quantity")
                        .HasColumnType("REAL");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IngredientId", "ReceiptId");

                    b.HasIndex("ReceiptId");

                    b.ToTable("rms_ingredient_use");
                });

            modelBuilder.Entity("RecipeManagementSystem.Models.Db.Ingredient", b =>
                {
                    b.HasOne("RecipeManagementSystem.Models.Db.IngredientCategory", "Category")
                        .WithMany("Ingredients")
                        .HasForeignKey("CategoryId");
                });

            modelBuilder.Entity("RecipeManagementSystem.Models.Db.RecipeStep", b =>
                {
                    b.HasOne("RecipeManagementSystem.Models.Db.Recipe", "Recipe")
                        .WithMany("PreparationSteps")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RecipeManagementSystem.Models.Db.RecipeTag", b =>
                {
                    b.HasOne("RecipeManagementSystem.Models.Db.RecipeTag", "ParentTag")
                        .WithMany("ChildrenTag")
                        .HasForeignKey("ParentTagId");
                });

            modelBuilder.Entity("RecipeManagementSystem.Models.Db.RecipeTagMap", b =>
                {
                    b.HasOne("RecipeManagementSystem.Models.Db.Recipe", "Recipe")
                        .WithMany("Tags")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RecipeManagementSystem.Models.Db.RecipeTag", "Tag")
                        .WithMany("Recipes")
                        .HasForeignKey("RecipeTagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RecipeManagementSystem.Models.Db.UseOfIngredient", b =>
                {
                    b.HasOne("RecipeManagementSystem.Models.Db.Ingredient", "Ingredient")
                        .WithMany("UsedBy")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RecipeManagementSystem.Models.Db.Recipe", "Recipe")
                        .WithMany("UseOfIngredients")
                        .HasForeignKey("ReceiptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
